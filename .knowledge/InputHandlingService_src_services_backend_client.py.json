{"is_source_file": true, "format": "Python", "description": "This file defines a Python class `BackendClient` that acts as an async HTTP client for communicating with a backend service. It provides methods to send city data to the backend and handle responses, including fallback behavior when the backend is unreachable. It also includes a factory function to instantiate the client using application settings.", "external_files": ["src/core/settings.py", "src/schemas/city.py", "httpx"], "external_methods": ["get_settings"], "published": ["get_backend_client"], "classes": [{"name": "BackendClient", "description": "An asynchronous HTTP client wrapper for communicating with the backend service."}], "methods": [{"name": "None __init__(self, base_url: str, timeout_seconds: float = 10.0)", "description": "Initializes the BackendClient with a base URL and timeout.", "scope": "BackendClient", "scopeKind": "class"}, {"name": "Dict[str,Any] _post_json(self, path: str, json: Dict[str, Any])", "description": "Helper method to POST JSON data to a specified path and retrieve the response.", "scope": "BackendClient", "scopeKind": "class"}, {"name": "BackendForwardResult forward_city(self, city: str, source: Optional[str] = None)", "description": "Sends a city name (and optional source) to the backend for processing and returns the result.", "scope": "BackendClient", "scopeKind": "class"}, {"name": "BackendClient get_backend_client()", "description": "Factory function that creates and returns a configured BackendClient instance using application settings.", "scope": "", "scopeKind": ""}], "calls": ["self._post_json", "get_settings"], "search-terms": ["BackendClient", "forward_city", "async httpx", "city forwarding", "fallback response"], "state": 2, "file_id": 7, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "BackendClient", "path": "/home/kavia/workspace/code-generation/travel-assistant-1358-2579/InputHandlingService/src/services/backend_client.py", "pattern": "/^class BackendClient:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/travel-assistant-1358-2579/InputHandlingService/src/services/backend_client.py", "pattern": "/^    def __init__(self, base_url: str, timeout_seconds: float = 10.0) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "member", "signature": "(self, base_url: str, timeout_seconds: float = 10.0)", "scope": "BackendClient", "scopeKind": "class"}, {"_type": "tag", "name": "_post_json", "path": "/home/kavia/workspace/code-generation/travel-assistant-1358-2579/InputHandlingService/src/services/backend_client.py", "pattern": "/^    async def _post_json(self, path: str, json: Dict[str, Any]) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, path: str, json: Dict[str, Any])", "scope": "BackendClient", "scopeKind": "class"}, {"_type": "tag", "name": "forward_city", "path": "/home/kavia/workspace/code-generation/travel-assistant-1358-2579/InputHandlingService/src/services/backend_client.py", "pattern": "/^    async def forward_city(self, city: str, source: Optional[str] = None) -> BackendForwardResul/", "language": "Python", "typeref": "typename:BackendForwardResult", "kind": "member", "signature": "(self, city: str, source: Optional[str] = None)", "scope": "BackendClient", "scopeKind": "class"}, {"_type": "tag", "name": "get_backend_client", "path": "/home/kavia/workspace/code-generation/travel-assistant-1358-2579/InputHandlingService/src/services/backend_client.py", "pattern": "/^def get_backend_client() -> BackendClient:$/", "language": "Python", "typeref": "typename:BackendClient", "kind": "function", "signature": "()"}], "hash": "c5e41424c48af0b7e3033a0c1c7e1d57", "format-version": 4, "code-base-name": "InputHandlingService", "filename": "InputHandlingService/src/services/backend_client.py", "revision_history": [{"17": ""}]}